#name: file3
#description: Setup application environment for OneApp
#inputs:
# platform:
#   description: Platform
#outputs:
#  out:
#    value: ${{steps.step_id.outputs.out}}
#
#runs:
#  using: "composite"
#  steps:
#    - name: print
#      id: step_id
#      shell: bash
#      run: |
#       echo "${{ inputs.platform }}"
#       echo "out=composite action" >> $GITHUB_OUTPUT
name: app-center-release-notes
description: Generate release notes file for app center
inputs:
  secrets:
    required: true
    description: JSON secrets
  workflow_name:
    required: true
    description: the name of the workflow (.yml) file
  base_branch:
    required: false
    description: the name of the base branch to get changelog from
    default: master
runs:
  using: "composite"
  steps:
    - name: Set environment vars
      shell: bash
      run: |
        # Get current and previous run timestamps
        sha=5afc3b93a2c29e36651e12c38b30594302c8d8d7
                currentShaResponse=$(curl -s -H "Authorization: Bearer ${{ env.ONEPLATFORM_GITHUB_TOKEN }}" \
                https://github.vodafone.com/api/v3/repos/VFGroup-MyVodafone-OnePlatform/MyVodafone-OneApp/commits/$sha)
        echo "$currentShaResponse"
        CURRENT_RUN_DATE=$(echo "$currentShaResponse" | jq -r 'map(select(.merged_at != null and .merge_commit_sha == "'"$sh"'" )) | .[0].merged_at')
        echo "CURRENT_RUN_DATE=$CURRENT_RUN_DATE" >> $GITHUB_ENV
        echo "Current run commit sha date: $CURRENT_RUN_DATE"
        # Get previous run date
#        API_URL="https://github.vodafone.com/api/v3/repos/VFGroup-MyVodafone-OnePlatform/MyVodafone-OneApp/actions/workflows/${{ inputs.workflow_name }}.yml/runs?status=completed&branch=${{ inputs.base_branch }}"
#        RESPONSE=$(curl -s -H "Authorization: Bearer ${{ env.TOKEN }}" "$API_URL")
#        PREV_RUN_SHA=$(echo "$RESPONSE" | jq -r '.workflow_runs[] | select(.conclusion == "success") | .head_sha' | head -n 1)
#        echo "Previous run commit sha: $PREV_RUN_SHA"
#        PREV_RUN_DATE=$(git show -s --format=%cI $PREV_RUN_SHA)
#        echo "PREV_RUN_DATE=$PREV_RUN_DATE" >> $GITHUB_ENV
#        echo "Previous run commit sha date: $PREV_RUN_DATE"
#      env:
#        TOKEN: ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }}
#    - name: Get .github directory
#      shell: bash
#      run: |
#        mkdir -p .github
#        cp -r oneapp_repo/.github/* .github/
#        rm -rf oneapp_repo/*
#    - name: Setup node
#      uses: actions/setup-node@v3
#      with:
#        node-version: 18
#    - name: Install npm packages for app-center-release-notes-generator
#      shell: bash
#      run: |
#        npm i -f yargs
#        npm i -f moment
#        npm i -f @actions/github
#        npm i -f @actions/core
#    - name: Create release notes file
#      shell: bash
#      run: |
#        RUN_ID_URL="Generated by GitHub SaaS action run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#        # Create release notes file for AppCenter
#        RELEASE_NOTES_FILE="${{github.workspace}}/releasenotes.txt"
#        echo "${RUN_ID_URL}" > ${RELEASE_NOTES_FILE}
#        node .github/composite/AppCenterReleaseNotes/app-center-release-notes-generator -l ${{env.PREV_RUN_DATE}} -c ${{env.CURRENT_RUN_DATE}} -f $RELEASE_NOTES_FILE -t ${{ env.TOKEN }} -b ${{ inputs.base_branch }}
#        awk 'NR==1{print; print ""; next} {print "- " $0}' ${RELEASE_NOTES_FILE} > tempfile && mv tempfile ${RELEASE_NOTES_FILE}
#      env:
#        TOKEN: ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }}
#    - uses: actions/upload-artifact@v3
#      with:
#        name: release-notes
#        path: releasenotes.txt
#        retention-days: 2
